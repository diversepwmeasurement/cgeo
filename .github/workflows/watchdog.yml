env:
  API_LEVEL: 26
  JDK_VERSION: ${{ inputs.JDK_VERSION || '11' }}
jobs:
  watchdog-tests:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout the latest code
      uses: actions/checkout@v4
      with:
        ref: ${{ matrix.branch }}
    - continue-on-error: true
      name: Enable KVM group perms
      run: 'echo ''KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"''
        | sudo tee /etc/udev/rules.d/99-kvm4all.rules

        sudo udevadm control --reload-rules

        sudo udevadm trigger --name-match=kvm

        '
    - continue-on-error: true
      name: Setup cgeo preferences and keystore
      uses: ./.github/actions/cgeo-preferences
      with:
        ALC_CONSUMER_KEY: ${{ secrets.ALC_CONSUMER_KEY }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_ALIAS_PASSWORD: ${{ secrets.KEY_ALIAS_PASSWORD }}
        KEY_STORE: ${{ secrets.KEY_STORE }}
        KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
        MAPS_API2_KEY: ${{ secrets.MAPS_API2_KEY }}
        MAPS_API_KEY: ${{ secrets.MAPS_API_KEY }}
        MAPS_API_KEY_MARKET: ${{ secrets.MAPS_API_KEY_MARKET }}
        OCDE_OKAPI_CONSUMER_KEY: ${{ secrets.OCDE_OKAPI_CONSUMER_KEY }}
        OCDE_OKAPI_CONSUMER_SECRET: ${{ secrets.OCDE_OKAPI_CONSUMER_SECRET }}
        OCNL_OKAPI_CONSUMER_KEY: ${{ secrets.OCNL_OKAPI_CONSUMER_KEY }}
        OCNL_OKAPI_CONSUMER_SECRET: ${{ secrets.OCNL_OKAPI_CONSUMER_SECRET }}
        OCPL_OKAPI_CONSUMER_KEY: ${{ secrets.OCPL_OKAPI_CONSUMER_KEY }}
        OCPL_OKAPI_CONSUMER_SECRET: ${{ secrets.OCPL_OKAPI_CONSUMER_SECRET }}
        OCRO_OKAPI_CONSUMER_KEY: ${{ secrets.OCRO_OKAPI_CONSUMER_KEY }}
        OCRO_OKAPI_CONSUMER_SECRET: ${{ secrets.OCRO_OKAPI_CONSUMER_SECRET }}
        OCUK_OKAPI_CONSUMER_KEY: ${{ secrets.OCUK_OKAPI_CONSUMER_KEY }}
        OCUK_OKAPI_CONSUMER_SECRET: ${{ secrets.OCUK_OKAPI_CONSUMER_SECRET }}
        OCUS_OKAPI_CONSUMER_KEY: ${{ secrets.OCUS_OKAPI_CONSUMER_KEY }}
        OCUS_OKAPI_CONSUMER_SECRET: ${{ secrets.OCUS_OKAPI_CONSUMER_SECRET }}
        PREF_COOKIESTORE: ${{ secrets.PREF_COOKIESTORE }}
        PREF_PASSWORD: ${{ secrets.PREF_PASSWORD }}
        PREF_USERNAME: ${{ secrets.PREF_USERNAME }}
        SU_CONSUMER_KEY: ${{ secrets.SU_CONSUMER_KEY }}
        SU_CONSUMER_SECRET: ${{ secrets.SU_CONSUMER_SECRET }}
        THUNDERFOREST_API_KEY: ${{ secrets.THUNDERFOREST_API_KEY }}
    - continue-on-error: true
      name: Set up JDK ${{ env.JDK_VERSION }}
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: ${{ env.JDK_VERSION }}
    - continue-on-error: true
      name: Gradle cache
      uses: gradle/actions/setup-gradle@v3
      with:
        cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
        cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/androidci'
          }}
    - continue-on-error: true
      id: avd-cache
      name: AVD cache
      uses: actions/cache@v4
      with:
        key: avd-${{ env.API_LEVEL }}
        path: '~/.android/avd/*

          ~/.android/adb*

          '
    - continue-on-error: true
      if: steps.avd-cache.outputs.cache-hit != 'true'
      name: create AVD and generate snapshot for caching
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: ${{ env.API_LEVEL }}
        arch: x86_64
        disable-animations: false
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim
          -camera-back none
        force-avd-creation: false
        script: echo "Generated AVD snapshot for caching."
        target: google_apis
    - continue-on-error: true
      env:
        BUILD_NUMBER: ${{ github.run_number }}
      name: Run Unit Tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: ${{ env.API_LEVEL }}
        arch: x86_64
        disable-animations: true
        emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio
          -no-boot-anim -camera-back none
        force-avd-creation: false
        script: './gradlew main:connectedBasicDebugAndroidTest --no-daemon --continue
          -Pandroid.testInstrumentationRunnerArguments.class=cgeo.watchdog.WatchdogTest

          '
        target: google_apis
    - continue-on-error: true
      if: always()
      name: Publish Test Report
      uses: mikepenz/action-junit-report@v4
      with:
        report_paths: '**/build/test-results/**/*.xml'
    strategy:
      matrix:
        branch:
        - master
        - release
name: Run watchdog tests
on:
  repository_dispatch:
    types: trigger-ga___watchdog.yml
